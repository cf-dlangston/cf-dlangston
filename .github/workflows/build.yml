name: ðŸ”„ Update README

on:
  push:
    branches: ["master"]
    paths:
      - 'src/**'
      - '.github/workflows/build.yml'
  
  schedule:
    - cron: "0 5 * * *" # This will run the action every day at midnight EST time

  workflow_dispatch:

jobs:
  update-readme:
    name: "Build ReadMe and Commit"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:latest
      options: --user root
    env:
      github: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
    
      - name: Set up Node.js
        uses: actions/setup-node@main
        with:
          node-version: '>=20'
          cache: 'npm'
          cache-dependency-path: "${{ github.workspace }}/src"
          
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        
      - name: Node Cache
        uses: actions/cache@master
        id: npm-cache
        with:
          path: |
             ${{ steps.npm-cache-dir.outputs.dir }}
             ${{ github.workspace }}/src/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('${{ github.workspace }}/src/package-lock.json') }}

      - name: Install Node Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefix ./src
          
      - name: Increment version
        run: npm version patch --prefix ./src

      - name: Get Actions JWT
        uses: actions/github-script@master
        id: get_jwt
        with:
          script: |
            core.setOutput('ACTIONS_RUNTIME_TOKEN', process.env['ACTIONS_RUNTIME_TOKEN']);
            core.setOutput('ACTIONS_RESULTS_URL', process.env['ACTIONS_RESULTS_URL']);

      - name: Test Project
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ steps.get_jwt.outputs.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RESULTS_URL: ${{ steps.get_jwt.outputs.ACTIONS_RESULTS_URL }}
          HOME: /root
        run: npm run test --prefix ./src

      - name: Build Project
        env:
          PERSONAL_ACCESS_TOKEN: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
        run: npm run build --prefix ./src

      - name: Copy build output
        run: cp -r src/out/* .

      - name: Commit Changes
        run: |
          git config --global --add safe.directory $(pwd)
          git status .
          git config user.email "${{secrets.GIT_EMAIL}}"
          git config user.name "${{secrets.GIT_NAME}}"
          git add .
          git commit -m "Update README" || echo "No changes to commit"
          git push
